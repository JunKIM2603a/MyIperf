name: Build & Release (Multi-Project)

on:
  push:
    tags:
      - 'v*'   # v1.0, v2.0 등 태그 push 시 실행

permissions:
  contents: write

jobs:
  build-MyIperf:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install MSYS2 & MinGW-w64
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: mingw-w64-ucrt-x86_64-gcc cmake make

      - name: Configure CMake
        working-directory: MyIperf
        run: cmake -B build -S . -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release

      - name: Build MyIperf
        working-directory: MyIperf
        run: cmake --build build --target IPEFTC -- -j4

      - name: List build directory
        run: dir MyIperf/build /s

      - name: Rename & Zip MyIperf exe with version (safe)
        shell: pwsh
        run: |
          $version = "${{ github.ref_name }}"
          $exePath = "MyIperf/build/IPEFTC.exe"
          if (-Not (Test-Path $exePath)) {
              $exePath = "MyIperf/build/Release/IPEFTC.exe"
          }
          if (Test-Path $exePath) {
              Rename-Item $exePath -NewName "MyIperf-$version.exe"
              Compress-Archive -Path (Join-Path (Split-Path $exePath) "MyIperf-$version.exe") -DestinationPath (Join-Path (Split-Path $exePath) "MyIperf-$version.zip")
          } else {
              Write-Error "IPEFTC.exe not found in build directory!"
          }

      - name: Upload artifact (MyIperf)
        uses: actions/upload-artifact@v4
        with:
          name: MyIperf
          path: |
            MyIperf/build/MyIperf-*.exe
            MyIperf/build/MyIperf-*.zip

  build-MyIperf_Pipe:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install MSYS2 & MinGW-w64
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: mingw-w64-ucrt-x86_64-gcc cmake make

      - name: Configure CMake
        working-directory: MyIperf_Pipe
        run: cmake -B build -S . -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release

      - name: Build MyIperf_Pipe
        working-directory: MyIperf_Pipe
        run: cmake --build build --target consumer -- -j4

      - name: List build directory
        run: dir MyIperf_Pipe/build /s

      - name: Rename & Zip MyIperf_Pipe exe with version (safe)
        shell: pwsh
        run: |
          $version = "${{ github.ref_name }}"
          $exePath = "MyIperf_Pipe/build/consumer.exe"
          if (-Not (Test-Path $exePath)) {
              $exePath = "MyIperf_Pipe/build/Release/consumer.exe"
          }
          if (Test-Path $exePath) {
              Rename-Item $exePath -NewName "MyIperf_Pipe-$version.exe"
              Compress-Archive -Path (Join-Path (Split-Path $exePath) "MyIperf_Pipe-$version.exe") -DestinationPath (Join-Path (Split-Path $exePath) "MyIperf_Pipe-$version.zip")
          } else {
              Write-Error "consumer.exe not found in build directory!"
          }

      - name: Upload artifact (MyIperf_Pipe)
        uses: actions/upload-artifact@v4
        with:
          name: MyIperf_Pipe
          path: |
            MyIperf_Pipe/build/MyIperf_Pipe-*.exe
            MyIperf_Pipe/build/MyIperf_Pipe-*.zip

  release:
    runs-on: ubuntu-latest
    needs: [build-MyIperf_Pipe, build-MyIperf]
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
          merge-multiple: true

      - name: List downloaded artifacts
        run: ls -R artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/*.exe
            artifacts/*.zip
